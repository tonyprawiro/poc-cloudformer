{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpcdemoapp": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo-vpc"
          }
        ]
      }
    },
    "subnetprivate1b": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.11.0/24",
        "AvailabilityZone": "us-west-1b",
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-private-subnet-1b"
          }
        ]
      }
    },
    "subnetpublic1a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "us-west-1a",
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-public-subnet-1a"
          }
        ]
      }
    },
    "subnetpublic1b": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-west-1b",
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-public-subnet-1b"
          }
        ]
      }
    },
    "subnetprivate1a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.10.0/24",
        "AvailabilityZone": "us-west-1a",
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-private-subnet-1a"
          }
        ]
      }
    },
    "igwdemovpc": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-igw"
          }
        ]
      }
    },
    "doptdemovpc": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acldemovpc01": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpcdemoapp"
        }
      }
    },
    "rtbprivate1b": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-private-rtb-1b"
          }
        ]
      }
    },
    "rtbprivate1a": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-private-rtb-1a"
          }
        ]
      }
    },
    "rtbpublic1b": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "demovpc-public-rtb"
          }
        ]
      }
    },
    "instancedemo1a": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0080e4c5bc078760e",
        "InstanceType": "t2.medium",
        "KeyName": "keypair.us-east-1",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demoapp-inst-1a"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumeinstdemosdb"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetprivate1a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.10.200",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgdemoappappserversg"
              }
            ]
          }
        ]
      }
    },
    "instancebastion": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0080e4c5bc078760e",
        "InstanceType": "t2.micro",
        "KeyName": "keypair.us-east-1",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demoapp-bastion"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetpublic1b"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.207",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgdemoappbastionsg"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "instanceecsworkstation": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::123412341234:instance-profile/ecslabworkstationprofile",
        "ImageId": "ami-0080e4c5bc078760e",
        "InstanceType": "t2.micro",
        "KeyName": "keypair.us-east-1",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-lab-workstation"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetpublic1a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.0.120",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgsgecslabworkstation"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "volumeunknown1": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-west-1b",
        "Size": "22",
        "VolumeType": "gp2"
      }
    },
    "volumeinstdemosdb": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-west-1a",
        "Encrypted": true,
        "Size": "8",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demoapp-inst-1a"
          }
        ]
      }
    },
    "volumeunknown2": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-west-1a",
        "Size": "22",
        "VolumeType": "gp2"
      }
    },
    "rdsdemoapp": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "20",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.t2.micro",
        "Port": "3306",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "0",
        "MasterUsername": "demoapp",
        "MasterUserPassword": "ChooseStrongPassword123",
        "PreferredBackupWindow": "06:31-07:01",
        "PreferredMaintenanceWindow": "sat:03:11-sat:03:41",
        "DBName": "demoapp",
        "Engine": "mysql",
        "EngineVersion": "5.6.40",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefaultvpcdemoapp"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgrdslaunchwizard"
          }
        ],
        "Tags": [
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ]
      }
    },
    "dbsubnetdefaultvpcdemoapp": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Created from the RDS Management Console",
        "SubnetIds": [
          {
            "Ref": "subnetpublic1a"
          },
          {
            "Ref": "subnetpublic1b"
          },
          {
            "Ref": "subnetprivate1a"
          },
          {
            "Ref": "subnetprivate1b"
          }
        ]
      }
    },
    "sgdemoappbastionsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "demoapp-bastion-sg",
        "VpcId": {
          "Ref": "vpcdemoapp"
        }
      }
    },
    "sgsgecslabworkstation": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "sgecslabworkstation",
        "VpcId": {
          "Ref": "vpcdemoapp"
        }
      }
    },
    "sgsgecslabpubliccluster": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "sgecslabpubliccluster",
        "VpcId": {
          "Ref": "vpcdemoapp"
        }
      }
    },
    "sgrdslaunchwizard": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Created from the RDS Management Console: 2019/03/08 12:42:26",
        "VpcId": {
          "Ref": "vpcdemoapp"
        }
      }
    },
    "sgsgecslabalb": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "sgecslab-alb",
        "VpcId": {
          "Ref": "vpcdemoapp"
        }
      }
    },
    "sgdemoappappserversg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "demoapp-appserver-sg",
        "VpcId": {
          "Ref": "vpcdemoapp"
        }
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acldemovpc01"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acldemovpc01"
        }
      }
    },
    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acldemovpc01"
        },
        "SubnetId": {
          "Ref": "subnetpublic1a"
        }
      }
    },
    "subnetacl6": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acldemovpc01"
        },
        "SubnetId": {
          "Ref": "subnetpublic1b"
        }
      }
    },
    "subnetacl7": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acldemovpc01"
        },
        "SubnetId": {
          "Ref": "subnetprivate1b"
        }
      }
    },
    "subnetacl8": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acldemovpc01"
        },
        "SubnetId": {
          "Ref": "subnetprivate1a"
        }
      }
    },
    "igwattachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "InternetGatewayId": {
          "Ref": "igwdemovpc"
        }
      }
    },
    "subnetroute4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbprivate1b"
        },
        "SubnetId": {
          "Ref": "subnetprivate1b"
        }
      }
    },
    "subnetroute5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbprivate1a"
        },
        "SubnetId": {
          "Ref": "subnetprivate1a"
        }
      }
    },
    "route4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbprivate1b"
        }
      }
    },
    "route5": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbprivate1a"
        }
      }
    },
    "route6": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbpublic1b"
        },
        "GatewayId": {
          "Ref": "igwdemovpc"
        }
      },
      "DependsOn": "igwdemovpc"
    },
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpcdemoapp"
        },
        "DhcpOptionsId": {
          "Ref": "doptdemovpc"
        }
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdemoappbastionsg"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "1.2.3.4/32"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsgecslabworkstation"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "1.2.3.4/32"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsgecslabpubliccluster"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgsgecslabalb"
        },
        "SourceSecurityGroupOwnerId": "123412341234"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgrdslaunchwizard"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "CidrIp": "1.2.3.4/32"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsgecslabalb"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdemoappappserversg"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.0.0.0/16"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdemoappbastionsg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsgecslabworkstation"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress5": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsgecslabpubliccluster"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgrdslaunchwizard"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress7": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsgecslabalb"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress8": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdemoappappserversg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "demoapp"
}